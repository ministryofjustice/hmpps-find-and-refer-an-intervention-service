version: 2.1
orbs:
  hmpps: ministryofjustice/hmpps@10
  mem: circleci/rememborb@0.0.2
parameters:
  releases-slack-channel:
    type: string
    default: SLACK_RELEASES_CHANNEL

_db_docker_config: &db_docker_config
  - image: cimg/openjdk:21.0.2
    environment:
      POSTGRES_DB: findandrefer_ci
  - image: cimg/postgres:15.0
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_DB: findandrefer_ci
      PGPORT: 5433

jobs:
  validate:
    executor:
      name: hmpps/java
      tag: "21.0"
    docker: *db_docker_config

    steps:
      - checkout
      - run:
          name: Setup flyway and psql
          command: |
            wget -qO- https://repo1.maven.org/maven2/org/flywaydb/flyway-commandline/10.15.2/flyway-commandline-10.15.2-linux-x64.tar.gz | \
              tar xvz && sudo ln -s `pwd`/flyway-10.15.2/flyway /usr/local/bin
            sudo apt update
            sudo apt install postgresql-client
      - run:
          name: Run migrations and local seeds
          command: |
            flyway -cleanDisabled="false" clean -url="jdbc:postgresql://localhost:5433/$POSTGRES_DB" -user="postgres" -password="password"
            flyway migrate -url="jdbc:postgresql://localhost:5433/$POSTGRES_DB" -user="postgres" -password="password" -locations="src/main/resources/db/migration,src/main/resources/db/local" -postgresql.transactional.lock=false
      - restore_cache:
          keys:
            - gradle-{{ checksum "build.gradle.kts" }}
            - gradle-
      - run:
          command: ./gradlew check
      - save_cache:
          paths:
            - ~/.gradle
          key: gradle-{{ checksum "build.gradle.kts" }}
      - store_test_results:
          path: build/test-results
      - store_artifacts:
          path: build/reports/tests

  publish_data:
    executor:
      name: hmpps/java
      tag: "21"
    docker: *db_docker_config
    steps:
      - checkout
      - mem/recall:
          env_var: APP_VERSION
      - run:
          name: Migrate the database
          command: |
            wget -qO- https://repo1.maven.org/maven2/org/flywaydb/flyway-commandline/10.15.2/flyway-commandline-10.15.2-linux-x64.tar.gz | \
              tar xvz && sudo ln -s `pwd`/flyway-10.15.2/flyway /usr/local/bin
            flyway migrate -url="jdbc:postgresql://localhost:5433/$POSTGRES_DB" -user="postgres" -password="password" -locations="src/main/resources/db/migration" -postgresql.transactional.lock=false
      - setup_remote_docker
      - run:
          name: Build data dictionary
          command: |
            sudo apt update && sudo apt install graphviz
            script/build-data-dictionary.sh
      - run:
          name: Tag docker image
          command: |
            docker tag data-dictionary "quay.io/hmpps/${CIRCLE_PROJECT_REPONAME}:data-dictionary-${APP_VERSION}"
      - when:
          condition:
            or:
              - equal: [ main, << pipeline.git.branch >> ]
              - matches:
                  pattern: "^hotfix/.+$"
                  value: << pipeline.git.branch >>
          steps:
            - run:
                name: Publish docker image
                command: |
                  docker login -u="${QUAYIO_USERNAME}" -p="${QUAYIO_PASSWORD}" quay.io
                  docker push "quay.io/hmpps/${CIRCLE_PROJECT_REPONAME}:data-dictionary-${APP_VERSION}"

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - publish_data:
          requires:
            - build_docker
      - validate:
          filters:
            tags:
              ignore: /.*/
      - hmpps/helm_lint:
          name: helm_lint
      - hmpps/build_multiplatform_docker:
          name: build_docker
          filters:
            branches:
              only:
                - main
      - hmpps/deploy_env:
          name: deploy_dev
          env: "dev"
          jira_update: true
          pipeline_id: <<pipeline.id>>
          pipeline_number: <<pipeline.number>>
          context: hmpps-common-vars
          filters:
            branches:
              only:
                - main
          requires:
            - validate
            - build_docker
            - publish_data
            - helm_lint
          helm_timeout: 5m
  #      - request-preprod-approval:
  #          type: approval
  #          requires:
  #            - deploy_dev
  #      - hmpps/deploy_env:
  #          name: deploy_preprod
  #          env: "preprod"
  #          jira_update: true
  #          jira_env_type: staging
  #          pipeline_id: <<pipeline.id>>
  #          pipeline_number: <<pipeline.number>>
  #          context:
  #            - hmpps-common-vars
  #            - hmpps-template-kotlin-preprod
  #          requires:
  #            - request-preprod-approval
  #          helm_timeout: 5m
  #      - request-prod-approval:
  #          type: approval
  #          requires:
  #            - deploy_preprod
  #      - hmpps/deploy_env:
  #          name: deploy_prod
  #          env: "prod"
  #          jira_update: true
  #          jira_env_type: production
  #          pipeline_id: <<pipeline.id>>
  #          pipeline_number: <<pipeline.number>>
  #          slack_notification: true
  #          slack_channel_name: << pipeline.parameters.releases-slack-channel >>
  #          context:
  #            - hmpps-common-vars
  #            - hmpps-template-kotlin-prod
  #          requires:
  #            - request-prod-approval
  #          helm_timeout: 5m
