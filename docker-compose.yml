services:
  postgres:
    image: postgres:16
    container_name: find_postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: dev
    volumes:
      - ./src/main/resources/db/local/init:/docker-entrypoint-initdb.d:ro

  hmpps-auth:
    image: quay.io/hmpps/hmpps-auth:latest
    networks:
      - hmpps
    depends_on:
      - auth-db
    ports:
      - '9090:8080'
    healthcheck:
      test: [ 'CMD', 'curl', '-f', 'http://localhost:8080/auth/health' ]
    environment:
      - SERVER_PORT=8080
      - SPRING_PROFILES_ACTIVE=dev,delius,local-postgres
      - SPRING_JPA_PROPERTIES_HIBERNATE_SHOW_SQL=false
      - SPRING_H2_CONSOLE_SETTINGS_WEBALLOWOTHERS=true
      - SPRING_DATASOURCE_URL=jdbc:postgresql://auth-db:5432/auth-db

  auth-db:
    image: postgres:15
    networks:
      - hmpps
    restart: always
    ports:
      - "5434:5432"
    environment:
      - POSTGRES_PASSWORD=admin_password
      - POSTGRES_USER=admin
      - POSTGRES_DB=auth-db
    healthcheck:
      test: pg_isready -d auth-db
  wiremock:
    image: wiremock/wiremock:3.13.1
    networks:
      - hmpps
    restart: always
    ports:
      - "9092:8080"
    volumes:
      - ./wiremock_mappings:/home/wiremock/mappings
    command: >
      --verbose

  localstack:
    image: localstack/localstack:latest
    container_name: localstack-sqs
    ports:
      - "4566:4566"
    environment:
      - SERVICES=sns,sqs
      - DEBUG=${DEBUG- }
      - DOCKER_HOST=unix:///var/run/docker.sock
      - DEFAULT_REGION=eu-west-2
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    healthcheck:
      test: [ "CMD", "bash", "awslocal sns list-queues" ]
      interval: 15s
      timeout: 10s
      retries: 3

networks:
  hmpps:
